name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  linux:
    name: Build Linux
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - target: x86_64
            target_triple: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
            artifact_name: gemini-keychecker
            release_name: gemini-keychecker-linux-x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Add Rust target
        run: |
          rustup update stable --no-self-update
          rustup default stable
          rustup target add ${{ matrix.target_triple }}

      - uses: Swatinem/rust-cache@v2

      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target_triple }}

      - name: Create release package
        run: |
          mv target/${{ matrix.target_triple }}/release/${{ matrix.artifact_name }} .
          mkdir -p release-package
          mv ${{ matrix.artifact_name }} release-package/
          cd release-package
          zip -r ../${{ matrix.release_name }}.zip .

      - name: Upload zipped artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.release_name }}
          path: ${{ matrix.release_name }}.zip
          retention-days: 1

  release:
    name: Create Release
    needs: [linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: ls -R artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.zip
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
